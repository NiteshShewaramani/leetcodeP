https://leetcode.com/problems/maximum-product-subarray
class Solution {
    public int maxProduct(int[] nums) {
        int leftProduct=1;
        int rightProduct=1;
        //max=nums[0] in case we have only 1 number and that is also negative
        int size=nums.length,max=nums[0];
        for(int i=0;i<size;i++)
        {
            //example //2,-1,4,5,6,0,5
            //we are resetting these values the 0
            //the only time the continuoes subarray will be broken is
            //when we get 0 as for negative values as we are running
            //pointers from both sides which will take care of these
            leftProduct = leftProduct==0?1:leftProduct;
            rightProduct = rightProduct==0?1:rightProduct;


            leftProduct=leftProduct*nums[i];
            //extra -1 because index starts from 0
            rightProduct=rightProduct*nums[(size-1)-i];
            max=Math.max(max,Math.max(leftProduct,rightProduct));
        }
        return max;        
    }
}