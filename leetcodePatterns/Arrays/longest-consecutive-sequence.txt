https://leetcode.com/problems/longest-consecutive-sequence/description/
class Solution {
    public int longestConsecutive(int[] nums) {
        if(nums==null || nums.length==0)
        return 0;
        Arrays.sort(nums);
        int max=1;
        int count=1;

        for(int j=1;j<nums.length;j++)
        {
            int diff=nums[j]-nums[j-1];
            if(diff==1)
            {
                ++count;
                if(count>max)
                max=count;
            
            }
            else if(diff==0)
            {
                //zero difference means we don't need to count it we can skip it
                continue;
            }
            else
            {
                //sequence broken
                count=1;
            }

        }
        return max;
        
    }
}
//another solution but takes more time
public int longestConsecutive(int[] num) {
  int max = 0;
  
  Set<Integer> set = new HashSet<Integer>();
  for (int i = 0; i < nums.length; i++) {
    set.add(nums[i]);
  }
  
  for (int i = 0; i < nums.length; i++) {
    int count = 1;
    
    // look left
    int num = nums[i];
    while (set.contains(--num)) {
      count++;
      set.remove(num);
    }
    
    // look right
    num = nums[i];
    while (set.contains(++num)) {
      count++;
      set.remove(num);
    }
    
    max = Math.max(max, count);
  }
  
  return max;
}