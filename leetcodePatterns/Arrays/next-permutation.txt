https://leetcode.com/problems/next-permutation
public class Solution {
    public void nextPermutation(int[] nums) {
        //step 1: 
        //from the right side find the first non increaing element
        //example 0,1,2,5,3,3,0
        //in this case from right side 2 will be the first non increaing 
        //element from the right(pivot)
        //step 2: 
        //again from the right side replace this element with its greater element
        //for 2 , moving from right 3 will be the first element greater than that so swap them
        //0,1,3,5,3,2,0
        //Step 3:
        //now reverse the element after pivot
        int pivot=-1;
        for(int i=nums.length-2;i>=0;i--)
        {
            //found the first non increasing element from right
            if(nums[i]<nums[i+1])
            {
                pivot=i;
                //found the pivot now break
                break;
            }

        }
        if(pivot==-1)
        {
            //no pivot found entire array is in reverse sorted order 
            //reverse the entire array
            reverse(0,nums);
        }
        else
        {
            //swap the pivot first
            for(int i=nums.length-1;i>pivot;i--)
            {
                System.out.println("else is " + i + " " + nums[i]);
                if(nums[i]>nums[pivot])
                {
                    //swap them
                    swap(i,pivot,nums);
                    break;
                }
            }
            reverse(pivot+1,nums);
        }                
        
    }

    public void swap(int index1,int index2,int[] arr)
    {
        int temp=arr[index1];
        arr[index1]=arr[index2];
        arr[index2]=temp;
    }
    public void reverse(int start,int[] arr)
    {
        int end=arr.length-1;
        while(start<end)
        {
            swap(start,end,arr);
            ++start;
            --end;
        }

    }
    
}